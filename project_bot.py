from aiogram import Bot, types, executor, Dispatcher
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from project_fun import *
from project_text import *
import time

bot = Bot(token='6156201703:AAFbJVvYks4EfX3UiyoIcdioHIfz6JUILQw', parse_mode='HTML')
dp = Dispatcher(bot)

ikb1 = InlineKeyboardMarkup(row_width=2)
i1 = InlineKeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
                          callback_data='info')
i2 = InlineKeyboardButton(text='–ü–∞—Ä—Å–µ—Ä –≤–∞–ª—é—Ç',
                          callback_data='parse')
i3 = InlineKeyboardButton(text='–ü–æ–¥–¥–µ—Ä–∂–∫–∞',
                          callback_data='support')
ikb1.add(i3, i1, i2)

ikb2 = InlineKeyboardMarkup()
ii1 = InlineKeyboardButton(text='USDüá∫üá∏',
                           callback_data='USDp')
ii2 = InlineKeyboardButton(text='EURüá™üá∫',
                           callback_data='EURp')
ii3 = InlineKeyboardButton(text='BRLüáßüá∑',
                           callback_data='BRLp')
ii4 = InlineKeyboardButton(text='KRWüá∞üá∑',
                           callback_data='KRWp')
ii5 = InlineKeyboardButton(text='HKDüá≠üá∞',
                           callback_data='HKDp')
ii6 = InlineKeyboardButton(text='AEDüá¶üá™',
                           callback_data='AEDp')
ii7 = InlineKeyboardButton(text='INRüáÆüá≥',
                           callback_data='INRp')
ii8 = InlineKeyboardButton(text='CNYüá®üá≥',
                           callback_data='CNYp')
ii9 = InlineKeyboardButton(text='GBRüá¨üáß',
                           callback_data='GBRp')
ii10 = InlineKeyboardButton(text='JPYüáØüáµ',
                            callback_data='JPYp')
ikb2.add(ii1, ii2, ii3, ii4, ii5, ii6, ii7, ii8, ii9, ii10)


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer(start_text,
                         reply_markup=ikb1)


@dp.message_handler(commands=['info'])
async def info_command(message: types.Message):
    await message.answer(info_text)


@dp.message_handler(commands=['parse'])
async def parse_command(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –≤–∞–ª—é—Ç—É: üí∞',
                         reply_markup=ikb2)


@dp.message_handler(commands=['support'])
async def info_command(message: types.Message):
    await message.answer(support_text)


@dp.callback_query_handler(text='info')
async def process_callback_info(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await callback_query.message.answer(info_text)


@dp.callback_query_handler(text='support')
async def process_callback_info(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await callback_query.message.answer(support_text)


@dp.callback_query_handler(text='parse')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await callback_query.message.answer('–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –≤–∞–ª—é—Ç—É: üí∞',
                                        reply_markup=ikb2)


@dp.callback_query_handler(text='USDp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 1\n–ö—É—Ä—Å –¶–ë –†–§: {USD()}')


@dp.callback_query_handler(text='EURp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 1\n–ö—É—Ä—Å –¶–ë –†–§: {EUR()}')


@dp.callback_query_handler(text='BRLp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 1\n–ö—É—Ä—Å –¶–ë –†–§: {BRL()}')


@dp.callback_query_handler(text='KRWp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 1000\n–ö—É—Ä—Å –¶–ë –†–§: {KRW()}')


@dp.callback_query_handler(text='HKDp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 1\n–ö—É—Ä—Å –¶–ë –†–§: {HKD()}')


@dp.callback_query_handler(text='AEDp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 1\n–ö—É—Ä—Å –¶–ë –†–§: {AED()}')


@dp.callback_query_handler(text='INRp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 10\n–ö—É—Ä—Å –¶–ë –†–§: {INR()}')


@dp.callback_query_handler(text='CNYp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 1\n–ö—É—Ä—Å –¶–ë –†–§: {CNY()}')


@dp.callback_query_handler(text='GBRp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 1\n–ö—É—Ä—Å –¶–ë –†–§: {GBR()}')


@dp.callback_query_handler(text='JPYp')
async def process_callback_parse(callback_query: types.CallbackQuery):
    await callback_query.answer()
    message_to_delete = await callback_query.message.answer('–ó–∞–≥—Ä—É–∑–∫–∞...')
    time.sleep(1)
    await message_to_delete.delete()
    await callback_query.message.answer(f'–ï–¥–∏–Ω–∏—Ü: 100\n–ö—É—Ä—Å –¶–ë –†–§: {JPY()}')


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
